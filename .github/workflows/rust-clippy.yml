# Advanced Clippy analysis with SARIF output for security integration
# Note: Basic clippy checks are also run in the main CI workflow

name: "Clippy Security Analysis"

on:
  # Only run on schedule and manual trigger to avoid duplication with CI
  schedule:
    - cron: '17 22 * * 0'  # Weekly on Sunday
  workflow_dispatch:
  # Run on main branch pushes for security scanning
  push:
    branches: ["main"]

# Security: Define minimal required permissions
permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  clippy-sarif:
    name: Clippy SARIF Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0

      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@1780873c7b576612439a134613cc4cc74ce5538c  # v1.15.2
        with:
          cache: true
          # toolchain, components, etc. are specified in rust-toolchain.toml
          components: clippy
      - name: Cache clippy-sarif tools
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830  # v4.3.0
        with:
          path: ~/.cargo/bin
          key: clippy-sarif-tools-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            clippy-sarif-tools-${{ runner.os }}-

      - name: Install clippy-sarif tooling
        run: |
          # Check if tools are already installed (from cache)
          if ! command -v clippy-sarif &> /dev/null || ! command -v sarif-fmt &> /dev/null; then
            echo "Installing clippy-sarif and sarif-fmt..."
            cargo install --locked clippy-sarif sarif-fmt
          else
            echo "clippy-sarif tools already installed"
          fi

      - name: Run clippy with SARIF output
        run: |
          echo "Running clippy analysis with enhanced security checks..."
          
          # Verify tools are available
          if ! command -v clippy-sarif &> /dev/null; then
            echo "❌ clippy-sarif not found"
            exit 1
          fi
          
          if ! command -v sarif-fmt &> /dev/null; then
            echo "❌ sarif-fmt not found"
            exit 1
          fi
          
          # Run clippy with comprehensive checks
          set -o pipefail
          cargo clippy \
            --workspace \
            --all-targets \
            --all-features \
            --message-format=json \
            -- -W clippy::pedantic -W clippy::nursery -W clippy::cargo | \
            clippy-sarif | \
            tee rust-clippy-results.sarif | \
            sarif-fmt
          
          echo "✅ Clippy analysis completed successfully"
        continue-on-error: true

      - name: Validate SARIF output
        run: |
          if [[ ! -f "rust-clippy-results.sarif" ]]; then
            echo "❌ SARIF file not generated"
            exit 1
          fi
          
          # Check if SARIF file is valid JSON
          if ! python3 -m json.tool rust-clippy-results.sarif > /dev/null 2>&1; then
            echo "⚠️  SARIF file may not be valid JSON, but continuing..."
          else
            echo "✅ SARIF file is valid JSON"
          fi
          
          echo "SARIF file size: $(du -h rust-clippy-results.sarif | cut -f1)"

      - name: Upload SARIF results
        if: always() && hashFiles('rust-clippy-results.sarif') != ''
        uses: github/codeql-action/upload-sarif@b36bf259c813715f76eafece573914b94412cd13  # v3
        with:
          sarif_file: rust-clippy-results.sarif
          category: "clippy"
          wait-for-processing: true
